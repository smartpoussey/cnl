/* process1.c */
#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/shm.h>
#include <stdio.h>
#define SHMSIZE 27
main()
{
char c;
int shmid;
key_t key;
char *shm, *s;
/*
* We'll name our shared memory segment
* "5678".
*/
key = 5678;
/*
* Create the
segment. */
if ((shmid = shmget(key, SHMSIZE, IPC_CREAT | 0666)) < 0)
{ perror("shmget");
exit(1);
}
/*
* Now we attach the segment to our data space.
*/
if ((shm = shmat(shmid, NULL, 0)) == (char *) -1)
{ perror("shmat");
exit(1);
}
/*
* Now put 1 in first
place */
s=shm;
*s++='1';
*s=NULL;
printf("Process1:- I have put the message %s\n",shm);
/*
* Finally, we wait until the other process

* changes the first character of our memory
*/
while (*shm != '2' && *shm+6 != 'o')
sleep(1);
printf("Process1:- Process2 has put the message
%s\n",shm); while (*shm != '3' && *shm+7 != 'y')
sleep(1);
printf("Process1:- Process3 has put the message %s\n",shm);
printf("Process1:- I am quiting\n");
exit(0);
}
/* process2.c */
#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/shm.h>
#include <stdio.h>
#define SHMSIZE 27
main()
{
char c;
int shmid;
key_t key;
char *shm;
/*
* We'll name our shared memory segment.
*/
key = 5678;
/*
* Create the segment.
*/
if ((shmid = shmget(key, SHMSIZE, 0666)) < 0)
{ perror("shmget");
exit(1);
}
/*
* Now we attach the segment to our data space.
*/
if ((shm = shmat(shmid, NULL, 0)) == (char *) -1)
{ perror("shmat");
exit(1);
}
/*

* Now put 1 in first
place */
*shm++='2';
*shm++=' ';
*shm++='h';
*shm++='e';
*shm++='l';
*shm++='l';
*shm++='o';
*shm = NULL;
exit(0);
}
/* process3.c */
#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/shm.h>
#include <stdio.h>
#define SHMSIZE 27
main()
{
char c;
int shmid;
key_t key;
char *shm, *s;
/*
* We'll name our shared memory segment.
*/
key = 5678;
/*
* Create the
segment. */
if ((shmid = shmget(key, SHMSIZE, 0666)) < 0)
{ perror("shmget");
exit(1);
}
/*
* Now we attach the segment to our data space.
*/
if ((shm = shmat(shmid, NULL, 0)) == (char *) -1)
{ perror("shmat");
exit(1);
}
/*
* Now put 1 in first place

*/
*shm++='3';
*shm++=' ';
*shm++='m';
*shm++='e';
*shm++='m';
*shm++='o';
*shm++='r';
*shm++='y';
*shm = NULL;
exit(0);
